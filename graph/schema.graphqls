type Customer {
  id: ID!
  name: String!
  email: String!
}

type Item {
  id: ID!
  name: String!
  price: Float!
}

type Order {
  id: ID!
  customer: Customer!
  items: [OrderItem!]!
  total: Float!
}

type OrderItem {
  id: ID!
  order: Order!
  item: Item!
  quantity: Float!
}

input NewCustomer {
  name: String!
  email: String!
}

input NewItem {
  name: String!
  price: Float!
}

input NewOrder {
  customerId: ID!
  items: [NewOrderItem!]
}

input NewOrderItem {
  orderId: ID
  itemId: ID!
  quantity: Float!
}

type Query {
  customers: [Customer]
  items: [Item]
  orders: [Order]
  orderItems: [OrderItem]
}

type Mutation {
  createCustomer(input: NewCustomer!): Customer!
  createItem(input: NewItem!): Item!
  createOrder(input: NewOrder!): Order!
  createOrderItem(input: NewOrderItem!): OrderItem!
}